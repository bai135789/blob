<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.mapper.UserOauthMapper" >
  <resultMap id="BaseResultMap" type="com.blog.pojo.UserOauth" >
    <id column="oid" property="oid" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="oauth_name" property="oauthName" jdbcType="VARCHAR" />
    <result column="oauth_id" property="oauthId" jdbcType="VARCHAR" />
    <result column="oauth_access_token" property="oauthAccessToken" jdbcType="VARCHAR" />
    <result column="oauth_expires" property="oauthExpires" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oid, userid, oauth_name, oauth_id, oauth_access_token, oauth_expires
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.blog.pojo.UserOauthExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_oauth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_oauth
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_oauth
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.pojo.UserOauthExample" >
    delete from user_oauth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.pojo.UserOauth" >
    insert into user_oauth (oid, userid, oauth_name, 
      oauth_id, oauth_access_token, oauth_expires
      )
    values (#{oid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{oauthName,jdbcType=VARCHAR}, 
      #{oauthId,jdbcType=VARCHAR}, #{oauthAccessToken,jdbcType=VARCHAR}, #{oauthExpires,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.pojo.UserOauth" >
    insert into user_oauth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        oid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="oauthName != null" >
        oauth_name,
      </if>
      <if test="oauthId != null" >
        oauth_id,
      </if>
      <if test="oauthAccessToken != null" >
        oauth_access_token,
      </if>
      <if test="oauthExpires != null" >
        oauth_expires,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="oauthName != null" >
        #{oauthName,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null" >
        #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="oauthAccessToken != null" >
        #{oauthAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="oauthExpires != null" >
        #{oauthExpires,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.pojo.UserOauthExample" resultType="java.lang.Integer" >
    select count(*) from user_oauth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_oauth
    <set >
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.oauthName != null" >
        oauth_name = #{record.oauthName,jdbcType=VARCHAR},
      </if>
      <if test="record.oauthId != null" >
        oauth_id = #{record.oauthId,jdbcType=VARCHAR},
      </if>
      <if test="record.oauthAccessToken != null" >
        oauth_access_token = #{record.oauthAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="record.oauthExpires != null" >
        oauth_expires = #{record.oauthExpires,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_oauth
    set oid = #{record.oid,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      oauth_name = #{record.oauthName,jdbcType=VARCHAR},
      oauth_id = #{record.oauthId,jdbcType=VARCHAR},
      oauth_access_token = #{record.oauthAccessToken,jdbcType=VARCHAR},
      oauth_expires = #{record.oauthExpires,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.pojo.UserOauth" >
    update user_oauth
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="oauthName != null" >
        oauth_name = #{oauthName,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null" >
        oauth_id = #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="oauthAccessToken != null" >
        oauth_access_token = #{oauthAccessToken,jdbcType=VARCHAR},
      </if>
      <if test="oauthExpires != null" >
        oauth_expires = #{oauthExpires,jdbcType=VARCHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.pojo.UserOauth" >
    update user_oauth
    set userid = #{userid,jdbcType=INTEGER},
      oauth_name = #{oauthName,jdbcType=VARCHAR},
      oauth_id = #{oauthId,jdbcType=VARCHAR},
      oauth_access_token = #{oauthAccessToken,jdbcType=VARCHAR},
      oauth_expires = #{oauthExpires,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
</mapper>